package com.github.moribund.objects.playable.players;

import com.esotericsoftware.kryonet.Connection;
import com.github.moribund.objects.attributes.Movable;
import com.github.moribund.objects.nonplayable.ProjectileType;
import com.github.moribund.objects.playable.players.containers.ItemContainer;
import com.github.moribund.utils.ArtificialTime;

/**
 * The {@code PlayableCharacter} interface is a template
 * for a character that can be interacted with by keys. All
 * playable characters are assumed as visible and movable.
 */
public interface PlayableCharacter extends Movable {

    int getGameId();
    /**
     * Gets the player's unique ID generated by the connection.
     * @return The Player's unique ID.
     */
    int getPlayerId();

    /**
     * Gets the connection of the server between the client.
     * @return The connection of the server between the client.
     */
    Connection getConnection();

    void collide(ProjectileType projectileType, PlayableCharacter source);

    int getHitpoints();

    void damage(int damageAmount, PlayableCharacter source);

    ItemContainer getInventory();

    ItemContainer getEquipment();

    boolean canAttack();

    void attack();

    ArtificialTime getTimeLeft();

    String getUsername();
}